<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_bamboo.BambooErrorHandler</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>BambooErrorHandler</name>
        <script><![CDATA[var BambooErrorHandler = Class.create();
BambooErrorHandler.prototype = {
	initialize: function() {
	},

	/**
    Params: status code & response body
    Functionality: Filters the response body to get the appropriate error message
    Return: Appropriate error message.
    */	
	setError: function(status_code, response) {
		var errorMsg = "";

		if (status_code == '401') {
			errorMsg = "Unauthorized - Incorrect username and / or password.";		
		} else {
			if (!gs.nil(response)) {
				var message = JSON.parse(response).message;
				if (status_code == '500') {
					if(message.toString().indexOf("connect timed out")) {
						errorMsg = "Request to Bamboo timed out.";
					}
				}
				else if (status_code == '503') {
					errorMsg = "Either the URL to the Bamboo Server instance is incorrect or the server is unreachable or down.";			
				} else {
					errorMsg = message; 			
				}		
				gs.error(errorMsg.toString());
			}
		}
		return errorMsg.toString();
	},

	/**
    Params: status code & response body
    Functionality: Filters the response body to get the appropriate error message and throws an error.
    Throw: Appropriate error message.
    */
	throwException: function(status_code, message) {
		var errorMsg = "";
		if (status_code == '401') {
			errorMsg = "Unauthorized - Incorrect username and / or password.";
		} else {
			if (!gs.nil(message)) {
				message = JSON.parse(message);
				if (status_code == '500') {
					if(message.toString().indexOf("connect timed out")) {
						errorMsg = "Request to Bamboo timed out.";
					} else {
						errorMsg = this.readErrorMessage(message);   
					}
				} else if (status_code == '503') {
					errorMsg = "Either the URL to the Bamboo Server instance is incorrect or the server is unreachable or down.";
				} else  {
					errorMsg = this.readErrorMessage(message);
				}
				gs.error(errorMsg.toString());        
			}
		}
		throw new Error(errorMsg.toString());
	},

	type: 'BambooErrorHandler'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>avotom</sys_created_by>
        <sys_created_on>2019-10-15 19:40:53</sys_created_on>
        <sys_id>bdf38e012fa000101a50ea5ef699b627</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>BambooErrorHandler</sys_name>
        <sys_package display_value="Bamboo Spoke" source="x_snc_bamboo">de259855db98cc1064dcf5861d9619c0</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Bamboo Spoke">de259855db98cc1064dcf5861d9619c0</sys_scope>
        <sys_update_name>sys_script_include_bdf38e012fa000101a50ea5ef699b627</sys_update_name>
        <sys_updated_by>avotom</sys_updated_by>
        <sys_updated_on>2019-10-15 19:40:53</sys_updated_on>
    </sys_script_include>
</record_update>
